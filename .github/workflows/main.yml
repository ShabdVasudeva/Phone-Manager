name: Build and Release APK

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Gradle wrapper (if missing or outdated)
        run: |
          if [ ! -f gradle/wrapper/gradle-wrapper.properties ]; then
            echo "Setting up Gradle wrapper..."
            gradle wrapper --gradle-version 8.0
          else
            current_version=$(./gradlew --version | grep -oP 'Gradle \K[0-9.]+')
            if [ "$(printf '%s\n' "8.0" "$current_version" | sort -V | head -n1)" != "8.0" ]; then
              echo "Updating Gradle wrapper to version 8.0"
              sed -i 's|gradle-[0-9]*\.[0-9]*\.[0-9]*-all\.zip|gradle-8.0-all.zip|' gradle/wrapper/gradle-wrapper.properties
            fi
          fi

      - name: Set up Gradle properties
        run: |
          echo "KEYSTORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }}" >> $GITHUB_ENV
          echo "KEY_ALIAS=${{ secrets.KEY_ALIAS }}" >> $GITHUB_ENV
          echo "KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}" >> $GITHUB_ENV
          
      - name: Build APK
        run: ./gradlew assembleRelease --no-daemon

      - name: Upload APK as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Built APK
          path: app/build/outputs/apk/release/*.apk

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Create Tag
        run: |
          TAG_NAME="v$(date +'%Y%m%d%H%M%S')"
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          git tag $TAG_NAME
          git push origin $TAG_NAME

      - name: Download APK Artifact
        uses: actions/download-artifact@v4
        with:
          name: Built APK
          path: release-apk/

      - name: List APK Files
        run: ls -alh release-apk/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: "Release ${{ env.TAG_NAME }}"
          body: 'This is an automated release of the APK.'
          files: release-apk/*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
